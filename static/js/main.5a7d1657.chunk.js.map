{"version":3,"sources":["ModelControls.js","Models/2.glb","ModelLoad.js","DebugModel.js","App.js","reportWebVitals.js","index.js"],"names":["SPEED","ModelControls","props","useThree","pointerlC","camera","gl","useRef","keyMap","console","log","keyEvent","isMobile","current","moveForward","moveRight","document","addEventListener","e","code","OrbitControls","PointerLockControls","ref","ModelMesh","gltf","useLoader","GLTFLoader","MODEL","object","scene","ModelLoad","receiveShadow","LoaderMesh","attach","args","color","Lights","dLight","mesh","intensity","Camera","cameraRef","PerspectiveCamera","makeDefault","position","fov","DebugModel","useState","buttonPressed","setButtonPressed","buttonEvents","colorManagement","style","background","Suspense","fallback","App","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","StrictMode","getElementById"],"mappings":"oQAKMA,EAAQ,IAGC,SAASC,EAAcC,GAAQ,IAAD,EAClBC,cACjBC,GAFmC,EACjCC,OADiC,EACzBC,GACEC,oBAEZC,GADSD,mBACA,IASfE,QAAQC,IAAI,YAAaR,GACzB,IAAMS,EAAW,WACTH,EAAM,OAAaI,YACnBR,EAAUS,QAAQC,YAAYd,GAE9BQ,EAAM,OAAaI,YACnBR,EAAUS,QAAQC,aAAY,KAE9BN,EAAM,OAAaI,YACnBR,EAAUS,QAAQE,UAAUf,GAE5BQ,EAAM,OAAaI,YACnBR,EAAUS,QAAQE,WAAU,MA8BpC,OA3BAC,SAASC,iBAAiB,WAvBV,SAACC,GACbV,EAAOU,EAAEC,OAAQ,EACjBR,OAsBJK,SAASC,iBAAiB,SApBZ,SAACC,GACXV,EAAOU,EAAEC,OAAQ,EACjBR,OA6CA,mCACMC,WAGM,mCACI,cAACQ,EAAA,EAAD,MAJE,cAACC,EAAA,EAAD,CACVC,IAAKlB,M,YClEN,MAA0B,8BCKnCmB,EAAY,WACd,IAAMC,EAAOC,YAAUC,IAAYC,GAEnC,OADAlB,QAAQC,IAAI,YAAac,GAClB,2BAAWI,OAAQJ,EAAKK,SAGpB,SAASC,IACpB,OACI,gCACI,sBAAMC,eAAa,EAAnB,SACI,cAAC,EAAD,QCRhB,IAAMC,EAAa,WACf,OACI,gCACI,iCACI,mCAAmBC,OAAO,WAAWC,KAAM,CAAC,EAAG,EAAG,KAClD,sCAAsBD,OAAO,WAAWE,MAAO,eAMzDC,EAAS,WACX,IAAMC,EAAS9B,mBAET+B,GADS/B,mBACFA,oBAMb,OACI,mCACI,uBAAMe,IAAKgB,EAAX,UACI,8BAAcC,UAAW,MAEzB,kCAAkBjB,IAAKe,EAAQE,UAAW,UAMpDC,EAAS,WACX,IAAMC,EAAYlC,mBAElB,OACI,cAACmC,EAAA,EAAD,CACIC,aAAa,EACbC,SAAU,CAAC,EAAG,GAAK,GACnBtB,IAAKmB,EACLI,IAAK,MAKF,SAASC,IAAc,IAAD,EACSC,oBAAS,GADlB,mBAC1BC,EAD0B,KACXC,EADW,OAEKF,mBAAS,MAFd,mBAG3BG,EAAe,CACjB,cAAiBF,EACjB,iBAAoBC,EACpB,YAN6B,KAO7B,eAP6B,MAuCjC,OACI,mCAEI,eAAC,IAAD,CACIE,iBAAe,EACfC,MAAO,CAEHC,WAAY,WAJpB,UAOI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAAC,EAAD,IAA1B,SACI,cAACzB,EAAD,MAGJ,cAAC7B,EAAD,CAAeiD,aAAcA,SC3F9BM,MAZf,WACE,OACE,qCACE,uBAAMC,GAAG,OAAT,UACE,0GACA,qDAEF,cAACX,EAAD,QCESY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,cAAC,IAAD,CAAeC,SAAUC,mBAAzB,SACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJvD,SAASwD,eAAe,SAM1Bd,M","file":"static/js/main.5a7d1657.chunk.js","sourcesContent":["import { DeviceOrientationControls, OrbitControls, PointerLockControls, TrackballControls } from '@react-three/drei';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { extend, useThree } from 'react-three-fiber';\n\nconst SPEED = 0.03;\n\n\nexport default function ModelControls(props) {\n    const { camera, gl } = useThree();\n    const pointerlC = useRef();\n    const orbitC = useRef();\n    const keyMap = {}\n    const keyDown = (e) => {\n        keyMap[e.code] = true;\n        keyEvent();\n    }\n    const keyUp = (e) => {\n        keyMap[e.code] = false;\n        keyEvent();\n    }\n    console.log(\"PROPS => \", props);\n    const keyEvent = () => {\n        if (keyMap['KeyW'] && !isMobile) {\n            pointerlC.current.moveForward(SPEED);\n        }\n        if (keyMap['KeyS'] && !isMobile) {\n            pointerlC.current.moveForward(-SPEED);\n        }\n        if (keyMap['KeyD'] && !isMobile) {\n            pointerlC.current.moveRight(SPEED);\n        }\n        if (keyMap['KeyA'] && !isMobile) {\n            pointerlC.current.moveRight(-SPEED);\n        }\n    }\n    document.addEventListener('keydown', keyDown);\n    document.addEventListener('keyup', keyUp);\n    // useEffect(() => {\n    //     if (props.buttonEvents.buttonPressed){\n    //         console.log(\"HMMMMMMm => \",props.buttonEvents.buttonEvent);\n    //         const pos = camera.position;\n    //         const state = props.buttonEvents.buttonEvent;\n    //         if(state === \"left\"){\n    //             pos.x -= SPEED;\n    //             camera.position.set(pos.x,pos.y,pos.z);\n    //         }\n    //         if(state === \"right\"){\n    //             pos.x += SPEED;\n    //             camera.position.set(pos.x,pos.y,pos.z);\n    //         }\n    //         if(state === \"forward\"){\n    //             pos.z += SPEED;\n    //             camera.position.set(pos.x,pos.y,pos.z);\n    //         }\n    //         if(state === \"backward\"){\n    //             pos.z -= SPEED;\n    //             camera.position.set(pos.x,pos.y,pos.z);\n    //         }\n    //         camera.updateMatrix();\n    //     }\n    // });\n\n    return (\n        <>\n            {!isMobile ? (<PointerLockControls\n                ref={pointerlC} />)\n                : (\n                    <>\n                        <OrbitControls\n                            // ref={orbitC}\n                            // maxPolarAngle={Math.PI / 2}\n                            // enableZoom={false}\n                        />\n                    </>\n                )}\n        </>\n    );\n}","export default __webpack_public_path__ + \"static/media/2.e6621269.glb\";","import React, { useRef } from 'react';\nimport { useFrame, useLoader } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport MODEL from './Models/2.glb';\n\nconst ModelMesh = () => {\n    const gltf = useLoader(GLTFLoader, MODEL);\n    console.log(\"MODEL => \", gltf);\n    return <primitive object={gltf.scene}/>;\n}\n\nexport default function ModelLoad(){\n    return(\n        <group>\n            <mesh receiveShadow>\n                <ModelMesh />\n            </mesh>\n        </group>\n    );\n}","import { OrbitControls, PerspectiveCamera, PointerLockControls, TrackballControls, useHelper } from '@react-three/drei';\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Canvas, useFrame, useThree } from 'react-three-fiber'\nimport { CameraHelper, DirectionalLightHelper, PointLightHelper } from 'three';\nimport ModelControls from './ModelControls';\nimport ModelLoad from './ModelLoad';\n\nconst LoaderMesh = () => {\n    return (\n        <group>\n            <mesh>\n                <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n                <meshStandardMaterial attach=\"material\" color={\"pink\"} />\n            </mesh>\n        </group>\n    );\n}\n\nconst Lights = () => {\n    const dLight = useRef();\n    const pLight = useRef();\n    const mesh = useRef();\n    // useFrame(() => {\n    //     mesh.current.rotation.x = mesh.current.rotation.y = mesh.current.rotation.z += -0.05;\n    // })\n    // useHelper(dLight, DirectionalLightHelper);\n    // useHelper(pLight, PointLightHelper);\n    return (\n        <>\n            <mesh ref={mesh}>\n                <ambientLight intensity={0.75} />\n                {/* <pointLight ref={pLight} position={[0, -2, -2]} intensity={1} /> */}\n                <directionalLight ref={dLight} intensity={1} />\n            </mesh>\n        </>\n    );\n}\n\nconst Camera = () => {\n    const cameraRef = useRef();\n    // useHelper(cameraRef, CameraHelper, 1, 'hotpink');\n    return (\n        <PerspectiveCamera\n            makeDefault={true}\n            position={[0, 0.5, 5]} // z = 2.glb = 5, 1.glb = 0\n            ref={cameraRef}\n            fov={35}\n        />\n    );\n}\n\nexport default function DebugModel() {\n    const [buttonPressed, setButtonPressed] = useState(false);\n    const [buttonEvent, setButtonEvent] = useState(null);\n    const buttonEvents = {\n        \"buttonPressed\": buttonPressed,\n        \"setButtonPressed\": setButtonPressed,\n        \"buttonEvent\": buttonEvent,\n        \"setButtonEvent\": setButtonEvent,\n    }\n    // <div id=\"model-controls\">\n    //             <div>\n    //                 {/* Forward */}\n    //                 <button onClick={() => { setButtonEvent(\"forward\"); setButtonPressed(true); }} onMouseUp={() => setButtonPressed(false)}>\n    //                     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-up\" viewBox=\"0 0 16 16\">\n    //                         <path fill-rule=\"evenodd\" d=\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\" />\n    //                     </svg>\n    //                 </button>\n    //             </div>\n    //             <div>\n    //                 {/* Left */}\n    //                 <button onClick={() => { setButtonEvent(\"left\"); setButtonPressed(true); }} onMouseUp={() => setButtonPressed(false)}>\n    //                     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-left\" viewBox=\"0 0 16 16\">\n    //                         <path fill-rule=\"evenodd\" d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\" />\n    //                     </svg>\n    //                 </button>\n    //                 {/* Backward */}\n    //                 <button onClick={() => { setButtonEvent(\"backward\"); setButtonPressed(true); }} onMouseUp={() => setButtonPressed(false)}>\n    //                     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-down\" viewBox=\"0 0 16 16\">\n    //                         <path fill-rule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\" />\n    //                     </svg>\n    //                 </button>\n    //                 {/* Right */}\n    //                 <button onClick={() => { setButtonEvent(\"right\"); setButtonPressed(true); }} onMouseUp={() => setButtonPressed(false)}>\n    //                     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-right\" viewBox=\"0 0 16 16\">\n    //                         <path fill-rule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\" />\n    //                     </svg>\n    //                 </button>\n    //             </div>\n    //         </div>\n    return (\n        <>\n            \n            <Canvas\n                colorManagement\n                style={{\n                    // background: \"radial-gradient(circle, rgba(182,26,26,1) 0%, rgba(154,0,6,1) 100%)\"\n                    background: \"#f9f9f9\"\n                }}\n            >\n                <Camera />\n                <Lights />\n                <React.Suspense fallback={<LoaderMesh />}>\n                    <ModelLoad />\n                </React.Suspense>\n                {/* <axesHelper args={[5]} /> */}\n                <ModelControls buttonEvents={buttonEvents} />\n                {/* <OrbitControls /> */}\n            </Canvas>\n        </>\n    );\n}","import './App.css';\nimport DebugModel from './DebugModel';\n\nfunction App() {\n  return (\n    <>\n      <span id=\"info\">\n        <p>Only works with Keyboard(W,A,S,D) and Mouse. Mobile Support is not given.</p>\n        <p>Work in progress!</p>\n      </span>\n      <DebugModel />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}