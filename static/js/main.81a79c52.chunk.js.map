{"version":3,"sources":["ModelControls.js","Models/1.glb","ModelLoad.js","DebugModel.js","App.js","reportWebVitals.js","index.js"],"names":["SPEED","ModelControls","useState","ref","useRef","keyMap","keyEvent","current","moveForward","moveRight","document","addEventListener","e","code","PointerLockControls","ModelMesh","gltf","useLoader","GLTFLoader","MODEL","console","log","object","scene","ModelLoad","receiveShadow","LoaderMesh","attach","args","color","Lights","dLight","mesh","intensity","Camera","cameraRef","PerspectiveCamera","makeDefault","position","fov","DebugModel","colorManagement","style","background","Suspense","fallback","App","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","StrictMode","getElementById"],"mappings":"oPAGMA,EAAQ,IAGC,SAASC,IAAiB,IAAD,EACLC,oBAAS,GADJ,mBAE9BC,GAF8B,UAExBC,oBACNC,EAAS,GASTC,EAAW,WACTD,EAAM,MACNF,EAAII,QAAQC,YAAYR,GAExBK,EAAM,MACNF,EAAII,QAAQC,aAAY,KAExBH,EAAM,MACNF,EAAII,QAAQE,UAAUT,GAEtBK,EAAM,MACNF,EAAII,QAAQE,WAAU,MAK9B,OAFAC,SAASC,iBAAiB,WAtBV,SAACC,GACbP,EAAOO,EAAEC,OAAQ,EACjBP,OAqBJI,SAASC,iBAAiB,SAnBZ,SAACC,GACXP,EAAOO,EAAEC,OAAQ,EACjBP,OAmBA,cAACQ,EAAA,EAAD,CACIX,IAAKA,I,YCpCF,MAA0B,8BCKnCY,EAAY,WACd,IAAMC,EAAOC,YAAUC,IAAYC,GAEnC,OADAC,QAAQC,IAAI,YAAaL,GAClB,2BAAWM,OAAQN,EAAKO,SAGpB,SAASC,IACpB,OACI,gCACI,sBAAMC,eAAa,EAAnB,SACI,cAAC,EAAD,QCThB,IAAMC,EAAa,WACf,OACI,gCACI,iCACI,mCAAmBC,OAAO,WAAWC,KAAM,CAAC,EAAG,EAAG,KAClD,sCAAsBD,OAAO,WAAWE,MAAO,eAMzDC,EAAS,WACX,IAAMC,EAAS3B,mBAET4B,GADS5B,mBACFA,oBAMb,OACI,mCACI,uBAAMD,IAAK6B,EAAX,UACI,8BAAcC,UAAW,MAEzB,kCAAkB9B,IAAK4B,EAAQE,UAAW,UAMpDC,EAAS,WACX,IAAMC,EAAY/B,mBAElB,OACI,cAACgC,EAAA,EAAD,CACIC,aAAa,EACbC,SAAU,CAAC,EAAG,GAAK,GACnBnC,IAAKgC,EACLI,IAAK,MAKF,SAASC,IACpB,OACI,mCACI,eAAC,IAAD,CACIC,iBAAe,EACfC,MAAO,CACHC,WAAY,uEAHpB,UAOI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAAC,EAAD,IAA1B,SACI,cAACrB,EAAD,MAEJ,4BAAYI,KAAM,CAAC,KACnB,cAAC3B,EAAD,SCnDD6C,MAZf,WACE,OACE,qCACE,uBAAMC,GAAG,OAAT,UACE,0GACA,qDAEF,cAACP,EAAD,QCESQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,cAAC,IAAD,CAAeC,SAAUC,GAAzB,SACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJnD,SAASoD,eAAe,SAM1Bd,M","file":"static/js/main.81a79c52.chunk.js","sourcesContent":["import { PointerLockControls } from '@react-three/drei';\nimport React, {useState, useRef} from 'react';\n\nconst SPEED = 0.03;\n\n\nexport default function ModelControls() {\n    const [isMobile,setIsMobile] = useState(false);\n    const ref = useRef();\n    const keyMap = {}\n    const keyDown = (e) => {\n        keyMap[e.code] = true;\n        keyEvent();\n    }\n    const keyUp = (e) => {\n        keyMap[e.code] = false;\n        keyEvent();\n    }\n    const keyEvent = () => {\n        if (keyMap['KeyW']){\n            ref.current.moveForward(SPEED);\n        }\n        if (keyMap['KeyS']){\n            ref.current.moveForward(-SPEED);\n        }\n        if (keyMap['KeyD']){\n            ref.current.moveRight(SPEED);\n        }\n        if (keyMap['KeyA']){\n            ref.current.moveRight(-SPEED);\n        }\n    }\n    document.addEventListener('keydown',keyDown);\n    document.addEventListener('keyup',keyUp);\n    return (\n        <PointerLockControls\n            ref={ref}\n        />\n    );\n}","export default __webpack_public_path__ + \"static/media/1.3b386c48.glb\";","import React, { useRef } from 'react';\nimport { useFrame, useLoader } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport MODEL from './Models/1.glb';\n\nconst ModelMesh = () => {\n    const gltf = useLoader(GLTFLoader, MODEL);\n    console.log(\"MODEL => \", gltf);\n    return <primitive object={gltf.scene}/>;\n}\n\nexport default function ModelLoad(){\n    return(\n        <group>\n            <mesh receiveShadow>\n                <ModelMesh />\n            </mesh>\n        </group>\n    );\n}","import { OrbitControls, PerspectiveCamera, PointerLockControls, TrackballControls, useHelper } from '@react-three/drei';\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Canvas, useFrame, useThree } from 'react-three-fiber'\nimport { CameraHelper, DirectionalLightHelper, PointLightHelper } from 'three';\nimport ModelControls from './ModelControls';\nimport ModelLoad from './ModelLoad';\nconst LoaderMesh = () => {\n    return (\n        <group>\n            <mesh>\n                <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n                <meshStandardMaterial attach=\"material\" color={\"pink\"} />\n            </mesh>\n        </group>\n    );\n}\n\nconst Lights = () => {\n    const dLight = useRef();\n    const pLight = useRef();\n    const mesh = useRef();\n    // useFrame(() => {\n    //     mesh.current.rotation.x = mesh.current.rotation.y = mesh.current.rotation.z += -0.05;\n    // })\n    // useHelper(dLight, DirectionalLightHelper);\n    // useHelper(pLight, PointLightHelper);\n    return (\n        <>\n            <mesh ref={mesh}>\n                <ambientLight intensity={0.75} />\n                {/* <pointLight ref={pLight} position={[0, -2, -2]} intensity={1} /> */}\n                <directionalLight ref={dLight} intensity={1} />\n            </mesh>\n        </>\n    );\n}\n\nconst Camera = () => {\n    const cameraRef = useRef();\n    // useHelper(cameraRef, CameraHelper, 1, 'hotpink');\n    return (\n        <PerspectiveCamera\n            makeDefault={true}\n            position={[0, 0.5, 0]}\n            ref={cameraRef}\n            fov={35}\n        />\n    );\n}\n\nexport default function DebugModel() {\n    return (\n        <>\n            <Canvas \n                colorManagement\n                style={{\n                    background: \"radial-gradient(circle, rgba(182,26,26,1) 0%, rgba(154,0,6,1) 100%)\"\n                    // background: \"#f9f9f9\"\n                }}\n            >\n                <Camera />\n                <Lights />\n                <React.Suspense fallback={<LoaderMesh />}>\n                    <ModelLoad />\n                </React.Suspense>\n                <axesHelper args={[5]} />\n                <ModelControls />\n            </Canvas>\n        </>\n    );\n}","import './App.css';\nimport DebugModel from './DebugModel';\n\nfunction App() {\n  return (\n    <>\n      <span id=\"info\">\n        <p>Only works with Keyboard(W,A,S,D) and Mouse. Mobile Support is not given.</p>\n        <p>Work in progress!</p>  \n      </span>\n      <DebugModel />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}